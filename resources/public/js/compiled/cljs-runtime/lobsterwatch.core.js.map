{"version":3,"sources":["lobsterwatch/core.cljs"],"mappings":";;;;;;;AAUA,AAAA,AAAMA;AAAN,AACE,AAAMC;AAAN,AACE,AAAA,AAACC;;AADH;;;AAGF,AAAA,AAAuBC;AAAvB,AACE,AAACC,AAAAA,AAAAA;;AACD,AAAA,AAACC,AAAgBC,AACD,AAAA,AAAiBC;;AAEnC,AAAA,AAAMC;AAAN,AACE,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACC,AAAAA,AAAAA;;AACD,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACD,AAAAA,AAAAA;;AACD,AAAA,AAAA,AAAmBE;AAAnB,AAAuC,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAA,AAAAA,AAACC,AAAAA,AAAAA;;;AACxC,AAACd;;AACD,AAACG","names":["lobsterwatch.core/dev-setup","lobsterwatch.config/debug?","cljs.core.println.cljs$core$IFn$_invoke$arity$variadic","lobsterwatch.core/mount-root","re-frame.core/clear-subscription-cache!","reagent.core.render.cljs$core$IFn$_invoke$arity$2","lobsterwatch.views/main-panel","js/document","lobsterwatch.core/init","G__52210","re-frame.core/dispatch-sync","G__52211","js/window","G__52212","re-frame.core/dispatch"],"sourcesContent":["(ns lobsterwatch.core\n  (:require\n   [reagent.core :as reagent]\n   [re-frame.core :as re-frame]\n   [lobsterwatch.events :as events]\n   [lobsterwatch.views :as views]\n   [lobsterwatch.config :as config]\n   ))\n\n\n(defn dev-setup []\n  (when config/debug?\n    (println \"dev mode\")))\n\n(defn ^:dev/after-load mount-root []\n  (re-frame/clear-subscription-cache!)\n  (reagent/render [views/main-panel]\n                  (.getElementById js/document \"app\")))\n\n(defn init []\n  (re-frame/dispatch-sync [::events/initialize-db])\n  (re-frame/dispatch-sync [::events/window-resized])\n  (.addEventListener js/window \"resize\" #(re-frame/dispatch [::events/window-resized]))\n  (dev-setup)\n  (mount-root))\n"]}